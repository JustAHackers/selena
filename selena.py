####    How To Open This Script?    ####
###     Use unlock Function         ####
import getpass,hashlib,base64
def hasher(text,length,key):
    if length > 64:
       raise ValueError("hash length should be lower than 64")
    result = hashlib.sha256(text+key+text).hexdigest()[:length][::-1]
    return result #return final result


def separator(text,length):
    return [text[i:i+length] for i in range(0,len(text),int(length))]

def decrypt(text,key):
    textsplit = text.split("!-!")
    encrypted,shuffled,hash_length,separate_length = textsplit[0].split("|")
    encrypted = separator(encrypted,int(hash_length))
    encrypted2 = separator("".join(encrypted),int(hash_length))
    shuffled = separator(shuffled,int(separate_length))
    primary_key_is_true = True
    for i in shuffled:
        hashed = hasher(i,int(hash_length),key)
        if hashed in encrypted:
           encrypted[encrypted.index(hashed)] = i

    for i in encrypted:
        if i in encrypted2 and len(textsplit) == 1:
           raise KeyError("Wrong Key")
        elif i in encrypted2:
           primary_key_is_true = False
           break

    if primary_key_is_true:
       result = base64.b64decode("".join(encrypted)[::-1])

    if len(textsplit) >= 2 and primary_key_is_true == False:
       master_key = separator(textsplit[1],int(hash_length))
       master_key2 = separator("".join(master_key),int(hash_length))
       for i in shuffled:
           hashed = hasher(i,int(hash_length),key)
           if hashed in master_key:
              master_key[master_key.index(hashed)] = i

       for i in master_key:
           if i in master_key2:
              raise KeyError("Wrong Key")
       result = base64.b64decode("".join(master_key)[::-1])
    return result

def unlock(key):
    exec (decrypt("10136f4b67cc9444fadfec31ecb5d21174b1b82d3b76b8ea2665a78e8381483e2833dd66279ad06b326a0822ff4ed726dd2319a36df86c09f6c2388a9b1b40cc532fcaa6a268ca32abc7e782a08e3443fd1929c6120c6cc613a5b6780f61e3ea4cc2ab6c0ed02d5410ecb1be91cd7a3d2458b989cde16433027c91390b0386792f1ff98b224428f3a1fc14654c184a8bacacc43674f5f335e08a44c0dd895cdf12fcaf813bdfde3790453bf499ab5d66d9b9d21dcbef01c1c404089bdddcb7957c0f52f0d2573df1a7e84e7f5f4ddc356326baa168dc52b608df82a6f0a1d40384db36b68e76b6efbeaa953f9c5288b71e26179dc772168da2bcea7d3e30d18a766a025c213e2c01c968acad9532f1b3bc454124adab05dc9fb10d7dad5f6352b96bf42b5a74c79fad05181392b61fac299d29bb2905d89e9802fecf11189fc44d2cb4edbf436402b3df08c7209eb0e4884c335281da479c64a5c4a9ee8e1f0b239cad84231bba7756b7422b99e964333ed0b58a7daf63da8ffb1c93b2db9d13f8d4de0436c65a187ef424865239b8b0c05d41750df9ae8fb48e2d4d141debfacee1bb9d1123ef86e173213d047104244a9ebdcb24dc153daf7de40a569a4fdaf6169b97993644f3e2aeaf57b0f1e29ba04885f5292aaf9220d244cde3a850bc6913f0bcf9936e03aa92bc24d1f3107d09ca974290867a8d7be425ff8d3aabf2721d90a5d96e934fe22170d2eb5d1285ea8a23291d31dcb069946ad8f6427a66c30970f6234d953a68ed8a5dde9e25b1c6599bd157548dfbc6300f982f5ceaa4e93cf4f8e526d9eed51edca9d60f7255b1838f763ac2ee752b09af5a012e787b367c29b2e5410a5aaef73892b8b0dcb70448a8fd3ccd0ab42cc4d31dd4c080bf9cd3cbc9f5495956438ce0b77bf5514da1f82894b93fd732119dc05ad13a43e68e4c5473ad29bc68d942faee5f58653349cdcc8c67d3b0b6985b12ab911e4ebe051794fd2e09b3deb426e7e7cb661330f51534e113e74d6c00c84b7d498ee2336f775ba4801db045632f024d19e92c0979887374e73d7e9bee32064073301545daa2a93551cbc3097dd5a3719d711e24f935948e3a2e0e55b6ba45bba871707bef6310bc157b82a4c0e8048c9abac190d899c47ea9aaf8a45c1b79d44d3c46f7b0da761aa9fccc92e9646cc3c5d2410bacc74ad2ba483e186f2d592defead2073d65e2afde3dd80fa1f9ccb641f6587ab95366b87221e3f3a67b2466d5fa6266d6e05461f7fbd4a12a885c484af388e2a975b4bc69a8497ecc4cb796eb8b738e59ba05539004056a64e8f8d3a807485fda0fb2e5972fd0b7f4279681f2bf0047c5ff8fca490114397e9a16bda578dcee807857cf1efbe625947dd5c4ea99476231a7f719bb5ae25ede55962a86fac66cb42c251b9d7bb03a39b7adb11ea0c410f0fb21a6207653f588dc8994add37735947dd56bea2a2f704824ae81d7fe8203e0b309851352a7b6331640be32d9746a97b68dfb3a7abbabd24b99e877759273780ae361c07d03527c1d30f895fec43a8a0e93cc5bfac86a295364f04f762e0cf6c2388c1a05ca901ef22c0aeacd3fd8173f29607125021b93332966cc4d8e551bf64fdc1fa1ad06ea37de714fe61330f52319a36df86c09884c335281da479c64a5cec01d0dc24a5ce252b22c9433a1754109df43e2fec26a77a43b3d281e8584e061a398f6773501ffba61ac9060348de615b1a9653d39defcd8fd3ccda9e26e7dcc066effe51d8d14e0fe79270a6ed9d981cdcebbf189a834ea4f9dbece80cd9e3caaf52345d8c888e72ccb2e5f32642aba4b05b323e9f64c3580e12e4048212a87b8caf221d261a425f209fd694c1149ee66d363bee092a2f471345350a99d3bbce59c111780b513ff5c27b1a57c1a807aa8cd89724a5e3a29b6f3a433d2473409078f666eda3c5ddbcc0861583a555b7c77744c16232b0fafb398dd69cd3126436cdcfd6f39beeb73e96e3d160a3cbe11228a0e5d788e3a3a148d1cd51167ee61a398fa3fdb2cbfc5fb0c5b2a7eb2fe86bd5731d1b3a823f2cb01ba935cba107aa8cdd9b40cf93561124268f7e27c78e9548dbcdcec137af297f18b2a77f0a9051d740fa0da32ca4f9f2a5dae7f2cf3d1db884a8e6c20a07aa8cdd9b40cfb0f5d2b83814835866d35a7ff0587338ce6884c7ffd7c6277baa86dc5e4b558c137c65c396b8c27cbe6e0b2e00337c62f631ac83cf08b2573dc36a5901d222e819e6ae660a573bff3d361a398f61330f54d5df50bd97caf6a9b2bc2ed48acfa3b5755dbae1c9dd120250ec78309b9fa5aca067ea2f9c118e4c2dd11b1ef417e64a461a398f61330f5e8b24e2e19b0102cabb145c28814529fff397f5b73653349c07aa8cd11f0c9851edca9d60f72525ae9f426e6214155ea056837f8d8673206e317c87aaef2ad8125f0dada20801202eece6d1eebf48bcbaef4f2aa82b980f1f8859789f9038f23ab920ab1c14d7e0beac618840e9e870b2dc81e138f35380606454611fc9840a38ad306a2291ccc232756f3cd547cf81eb2605fe64c2e9d7472607bc77e0d2171a23b91352700dc9ddd0644769e31639ffac82d498173bce4bd9718f9b54764837f53cc3b035213c5231d5c5a1f5b0705f9b011fe6bdf0e7ce530b4786063ec187d8ea71a51e0dc132925abec96d6623b3216b8fd609b49b9edf56998374e08727ff4aca870bbe10d0d500485373a3347631d046888c1672b00d621523ca402f99663d5ae81385257cfedfb3a7a5bccee8d3c2e74981e069427f121651ecc303279e8a7e7c8a3079d4311485b3c856b3fea14ec0cde922caefae9147f2e532dc963bb50bed169c2da9df81ba3107fea174f68efdc903a5e5dcaee216f4b6df39fb0a6b86c7916065666d1b39b299e93fda9dedc656157d60f2c3deadaef0f2e217754f131bb01a1e32148238be686c2a215457447884c641de8|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|7|7",key))

if "__main__" == __name__:
   unlock(getpass.getpass("Key : "))
