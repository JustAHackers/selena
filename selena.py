####    How To Open This Script?    ####
###     Use unlock Function         ####
import getpass,hashlib,base64
def hasher(text,length,key):
    if length > 64:
       raise ValueError("hash length should be lower than 64")
    result = hashlib.sha256(text+key+text).hexdigest()[:length][::-1]
    return result #return final result


def separator(text,length):
    return [text[i:i+length] for i in range(0,len(text),int(length))]

def decrypt(text,key):
    textsplit = text.split("!-!")
    encrypted,shuffled,hash_length,separate_length = textsplit[0].split("|")
    encrypted = separator(encrypted,int(hash_length))
    encrypted2 = separator("".join(encrypted),int(hash_length))
    shuffled = separator(shuffled,int(separate_length))
    primary_key_is_true = True
    for i in shuffled:
        hashed = hasher(i,int(hash_length),key)
        if hashed in encrypted:
           encrypted[encrypted.index(hashed)] = i

    for i in encrypted:
        if i in encrypted2 and len(textsplit) == 1:
           raise KeyError("Wrong Key")
        elif i in encrypted2:
           primary_key_is_true = False
           break

    if primary_key_is_true:
       result = base64.b64decode("".join(encrypted)[::-1])

    if len(textsplit) >= 2 and primary_key_is_true == False:
       master_key = separator(textsplit[1],int(hash_length))
       master_key2 = separator("".join(master_key),int(hash_length))
       for i in shuffled:
           hashed = hasher(i,int(hash_length),key)
           if hashed in master_key:
              master_key[master_key.index(hashed)] = i

       for i in master_key:
           if i in master_key2:
              raise KeyError("Wrong Key")
       result = base64.b64decode("".join(master_key)[::-1])
    return result

def unlock(key):
    open("sele.py","w").write(decrypt("c1ab0c71df7e338d9343763c58ef655c4af06999d90e42faa23b764ec4baa4912a57a8013b3df4bc535e1a9e65529c2eab7c61d9900338b5366a3953bc477a1b5b131da44f17ff224854dbc68ebcf0b4ff1e1a6bece912ee3ecf213d2d60f2b7f7e993aba2e48cd93988ccbf134e19d0c2242801b84adc62021b610d62907b3657e99b9c4ecdb09e65d87d38f66bd02ca2e0f03a3d476c470c9e8cbe6cebe6b4f66bde626b41ec0738715c7e38dde966ee82d76ca55f677af5a57b72f268fb09c1aba4b1a5527eb9ad52830281907b3657e99b9c4ecdb09e65d87d38f66bd02ca2e0f03a3d476c470c9e8cbe6cebe6b4f66bde626bb5f6bd5792aaac57255621d705f08fcb316d5acb83388a58b7d858823b366c470326e601fc75946a6c845309f8ca2435e9aef28db54dd73de7ff134eba504595897c1ca786ab962b6738715c7e38dde966ee82d76ced827dad005fee15226a607f54f41e54f9d3eb0fbff51c23809ba8eb186ad1d71ac64d780f32a9616148f159a5f1917960466685ef651eacdccc56030cf143c18e5bd0e81255fa4a9ca0864ccc7418982af9e871c3ff2c43372df90173887cb395b8869eb712acfac0bc157563611560ffa77ce711dd09f1bc315e7720bcdfe0e4b6a96d4ecdb09e65ddd628acd3928334ef67a758a2d7ec0452f8eafcf89ae03842a7448be60266bb3de6747b2f4909a141619f1c89400b2088ccbd132238b9c57b4379482a766a907b3657e9209400e4b6bf689d5ebaff6dd2f450a1cd5fd035729c1b868cc976531c9002a9ad246c9b928e2487088dabfe0bd1d71ff20a527526a287a39a0be58da6e5b928198ffc47ac9c52752d0262d47e396f73a39a0b9b79f0f9ee7daf5849b6696016442d09f1efb7452d78535e1cf00e532a7c4301a39a0c54d11548bbd20bf51fdeb7e712ee727b0ca97bf4ead2cfb199c3e616442d09f1bc2f6ac73d89db8726cb5b3a74ce4e013b3e164c60a4561236efb7452d78535e1d229c4d8f41ebf9fb17fd09f1865cf21a83d47e32b8729425f2e9414671239a0927e7eb9465325ccd09f1fd420ff6177bfc4cb83bcd1fd73a9ab4fb8eb56722e679a7ebc85769044dda569966c8e13199c5b372269fd03511d7bdcbcc3ba727af5e6894bebc40da5698b7dac21334aa1f67a01f66d2ad4c7b94654d206b5096f4e30529d5d11c0f4604261c55e579e1a4617563051c892187e1a4607753d0f43280fee299fbc9e354f9925018e2d9cb62da99657657fc46712726cb75bd57c7634f879c8e93fcf9a0cdb266fbe8ca9c474d19c5c8a29f71f1b8a2ab2e4827b43a436fe2da5698b7dac21334aa1f67a01f66d2ad4c7b94654d206b5096f4e30529d5d11c0f4604261c55e579e1a4617563051c892187e1a46f0ea392b4f0decc16a04966c8e13199c5b3c4432bcd310c6cb31c58add8943228c4c7f0dfdbb1d52c8c408ffc49f568832b0a2ccba39a081011821edb0e19fd09cfccb43d49221069a18ad2e9418ffc4b56504897f681ac260aefdba3535e1da3958ffc4d09f111d7d5253633c118ca2cdb818f769d8530bafac29893afeb36a62b3f5acea0b7bd09f1ad4c7b9465cd506d826778e0bc9db69bac6441ccb9944ff617a439f441cce7669805463b4b28494e532a7ec5fd8ffc4d09f19ecbba57a89b9c4ecdb09e65d7bce7752fc63753185c682772c85566077116a04d09f1ad4c7b9465e03530ad4a145412e9418ffc4966c81560ffa77cbc2f6dad721c62892294f939fbc41ee1319c7608ebd565f4e2c94765da41add897692173567ec83df6c169411e69108c2ae38b6444099af89d1592d8de49bec83dcee1670a7313de9774a5a626123be58777c8353a854c24e871fe2916d6f2385c3b7ab8ed8aba22acaa2f80b23dfcfb9be1ad7c5eae50f91d2388dc9226d6fc0c4ab8c9292294366e72e5bd3e3ee11e0cfd82e0f4d433309153c295806d30f256bf38bb92c51e0cdaf2b6d2791e5880c89b7ae9|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|5|8",key))

if "__main__" == __name__:
   unlock(getpass.getpass("Key : "))
