####    How To Open This Script?    ####
###     Use unlock Function         ####
import getpass,hashlib,base64
def hasher(text,length,key):
    if length > 64:
       raise ValueError("hash length should be lower than 64")
    result = hashlib.sha256(text+key+text).hexdigest()[:length][::-1]
    return result #return final result


def separator(text,length):
    return [text[i:i+length] for i in range(0,len(text),int(length))]

def decrypt(text,key):
    textsplit = text.split("!-!")
    encrypted,shuffled,hash_length,separate_length = textsplit[0].split("|")
    encrypted = separator(encrypted,int(hash_length))
    encrypted2 = separator("".join(encrypted),int(hash_length))
    shuffled = separator(shuffled,int(separate_length))
    primary_key_is_true = True
    for i in shuffled:
        hashed = hasher(i,int(hash_length),key)
        if hashed in encrypted:
           encrypted[encrypted.index(hashed)] = i

    for i in encrypted:
        if i in encrypted2 and len(textsplit) == 1:
           raise KeyError("Wrong Key")
        elif i in encrypted2:
           primary_key_is_true = False
           break

    if primary_key_is_true:
       result = base64.b64decode("".join(encrypted)[::-1])

    if len(textsplit) >= 2 and primary_key_is_true == False:
       master_key = separator(textsplit[1],int(hash_length))
       master_key2 = separator("".join(master_key),int(hash_length))
       for i in shuffled:
           hashed = hasher(i,int(hash_length),key)
           if hashed in master_key:
              master_key[master_key.index(hashed)] = i

       for i in master_key:
           if i in master_key2:
              raise KeyError("Wrong Key")
       result = base64.b64decode("".join(master_key)[::-1])
    return result

def unlock(key):
    open("sele.py","w").write(decrypt("5e44c1ecb324ef5ed7dab3b115131f1cb56b10c00725e0d069171f2b0fb20f6434153df9ffaea139354093fa98591155a2b297e6dbb1bbcec8685b3f59403c557bd47e697e0d9a81eccfae9c1bfe87fe6a45d3b46129efc4f21dce1cf8bcecf196b3b7aed3d43f02f54120d0b2989262d9a9881618941a4063aca7186c4ea28267a66d572a62ff0d2150eb3613d53834f21dce1cf8bcecf196b3b7aed3d43f02f54120d0b2989262d9a9881d8c1eb3284c4346c61854e3a18e0aaae77539e02f855675cfe09b86becdc4ea23472fe97237773f35b5c7de3728c7816cf4f16b234063aca7186c4ec5a55fa95d4dcdd874e46f97ecf845737db50f833b1e2c6a88191612d88ef7864d760911457d41136abe1e61f5a2dfe58b6f6369f7f676e73fb0dec42c31a513e17272004e15025d3c094a480221c21b37fdda7fd0cfe9b778ea3a5318a237196d1d818cf9cc3785a17c105f1be2d022799c81b010370fbc0f372e84a4d21ad52d2673c3954f1edff6c623284f21dcea33f723cbfbe2cac974c068834392084652d09f8e2100104fbac7186513988ebff5eadaf0a5111a6caf3bb6411ff4aa2655fb3432dc5902269568c6d0e34ef756e5e43b4d72a2cb18347340c68094e5c8e170543c50419815383c369066aec2d261f1bcf2e83b4d72a1257c70f75fe1fb86e300339febcceddf842cb1834f4550c58073c1eda0c30c93fcce41cf8bcea5b26c7d47476d6833772391ac28292a9f253f3d1f83218ad5f645cb7beb1e443fe8e3e5269a4eafe12e551209ebeb825e0e76c5fef477fd143832ac90b05876faf26577180fd476bf6a643f3c4b91ad09dac150b5923f0c5041989de5d1ac01855e7427eb8ab2aed2910055e052f89f8db7316b1186ecd55e02d0b08f7ac4f487371145301b398722d11c839d7746913e1a86d111cf0e0f12f5bb523917427eb89badede037921c82dc1bd6ef2f9af3a81e548ba0f00b08f7ac4f48732758dbd049a798aaa90647beb1e4636acf484692fe7f58aa49b055e0b3546e2ff1da816947a327ef3b69d6a1325a67609af5a5cf6d0e34ef0e0118febebfc9feeaa733bd941bd7a31442a3053b5a872d18b26ac873821cd139354089937345e0754a9d6accc794b550bda7596a682adab22b63b58a6cb2d7375e12afde174046abf5392ede22f5119b729e5ed16230125433fd31940b31b527eb91d3d10ddc4c4f5be4aa800b211439f1290597127ecb0234ea0e50289d52f9af0090ac|IF0ZQNlQVFGSKxWWpF0ZJNUQnl0QCd3YpJ0dj1WOzFGWOBTTDJUeahlRxoFWOBzYWljdjhkUwJmM1oHUtd3cjhkS2V2Rsx2YItWdkhEawkkbwA3QpVjejdEewR2R4BnY2U2chJGI0J3bw1WazEVaM1mW2NWbxgGZHtGcPd2bnl0QBdWSH50bj1WO0plV5Y3YpF0ZJNUQnl0QCpWYupVRUZUO4FGSsN3UHxmdi5WTvtUUvdWSpJEcJdUN2R2QCBnYHxWdJhkQ5JmM4B3YI1kNMlXOzQ2MjVXZDJ0aj1GbyoFWJVnWDF0ZJNUQnJ2R5oWWyYFMLNkSvRGSSd3YIJUeiNDawpFWN12YXJVUiJTOztERFdXTtRGbkN0ZpFGSSBzYYF1bJ1GawQGSCp3TIpkdidlVmJ2MCBTYXpVeahlTvt0QrtUSzIUeiNDa1s0U3lmWXxGMlRVMoJ2R3l2SpF0ZJNUQnl0QCtmYXh3cK1mR1JmM1UjYXVDbjl3Zw90ZvpUSXpEbM1mT2J2U5oGT392SD1mUspVaC12YtlDNhdlV6pkbClnYIpEck1mV5tUUvdWSH50bj1WO0plV5Y3YpF0ZJNUQnl0QBdWSpFUOJhEZslVbSlXYHJFakdUR5UWeKBnWTVDMahFawM0Zsd3YDF0ZJNUQnl0QCtmYXJlZjhkS2VGSrVXWywWdLdEe2llMGNHWIRGbZ1mU5FGWax2YywWdadUOzs0Qrt0QDJkahhkS2J2VWZmYtt2caJjVwMGSKZXZDFUOJZEdkNUaBdWSIJ1dM1WMoN2QoBzYtJFbalmQwMWbr9WYHxmekRUSnB1UClnWDhGdlZVOxMWb3B3QIpkdlhEbwUGWCxGUDF0ZJNUQnl0QCpWYXdXdZhlQ3p1V1s2SIJ1djp3b2xkMwFzYzAzZR1WOwg1R1UlYHdHcJR0dn1EVVd3TuF1ZLNkSLJmMJdmUIJUeiNDawpFWN12Y69mdMNDb2RGWSFTWtZ0djdkV1p1Qot2YHJVehhlWsNWartUSzoEbl1WO1p1RW52Y5hTaLJDb5wESSBnYTVDajhkQsJWbR9WYIJ0cDdGc0VmV5EzYtxWdkNUQvF2UrtUStxGdjdUO5R2QCBTYXZ0ciNkW6NmM3lTWzIFajJjT5FGWCBzYEF0ZZdVNrl0RrdmYtlzchhlTw00UBlTSHtGcDlWQnl0QBdWSIpkdlhEb6l1MKh2YI1kNMlXOoN2RrV3YY5kdZJDd650QaBTYIJ1dJREMnZ1RolnWn92ZJNUQnN2RGp3YDF0ZJdkU5FGWax2YHVVdZJTO0xke5knWXFDbD1mUzlERwc2V6FzNJ1GawQGSCpXSXZldkhVU500Q0AzSXlTMkhkVpp1U1omYuJ0cM1mR3N2RWVnWHxGdjdUO5R2QCVVYIpkdlhEbwUGWCxGUIBnbZlnWzFGWOBDUDVDajhkQsJWbR9mWItGdjJjV5RWbWlHUDVDajhkQsJWbR9mWtlDMJdEb1lESWpnWHhndZJjRztUUvdWStlDNlNVQ5kkR0R2QIpEbjhlVsN2MSpHTDF0Zj1mVwQGWKVXSU92SJNUQnl0Rs1WSIFUdZJTO0x0MCZ3YXZlekRUMupFWSd3YnxWbiNTSnF2UCBnYtZleLN0a2M0ZrdWSIJFciJTN6lERwcGVtRGbkN0ZpFGSSBzYYpFbjlWNEFGSKZnYXlTMkREM41ERBdXTtVVdZJTO0xkMNZ3YHxGMidEb1pFWN92SDlkNJxGe1lUa1EnYzQGMiNjQwl1UJB3QXlTdjlXNop1RSZWWzgWNjJjT5lFWCxGTDh2cadFNvJ2R5oWWpF0ZJhkQ5F2V1ATSTFUOJZEdkNUaBdWSDF0ZhdVWnF2UCVnYTVjekdkRwQGWOZWWXV1bJ1mTvNWb5QnWDF0ZJdEe2llMGNHTIJFciJTN6l0RsR3YTt2SJNUQnl0QBdWSU92SDNVQnl0QCBnWtZleLd0aw90ZvdWSphjdZhlQwxkbClnY3BXbj1WO0l0RxEjYIpEbjhlVsN2MSpHTXZ0aVdUO2J2QnFTTxAzSkhlTsplR5c3Yn92ZJNkQzJmMOhmYXZ0ciNUSwxkbSxWZt50bj1WO0p1U1Y3YI1kNMlXOoN2RrV3YDF0ZJNUQnl0QBdWSpJEcJdEb1lESClnYy4EaiZUO3NWb5QTZDF0ZahFaqpFWCBzTpVjbahVUvJGWsZGZXFDbM5mTzp1VWd3SywWdalXN3JmM5MXSHxWeJp2bpNGSKZXZpF0ZJNUQnl0QBdWSyYVaahkSwRWbWlHTIRGbZ1Ga2N2MSh2YygHcjNTU4xkbOdnYYZUMahlTwA1VkxGZtlDNlN1Zw90Zvp0YYJ0dadVNrt0RrB3QEF0dK1mT2R2V1AzYtFDajNEatNWbWpHTDF0ZJdEbtl0RrdmYnB3aadVWnRGSKZ3SIJFciJTN6tUUvdWSEFEcDlWQnlESSdHTykzaaNVQ5A1UBlXTYZUMahlTwA1VkxGZYpkbkdVMsJmbR9WSIpkdidEb6R2QBlTSIpEbZdlURJmM5M3QTlkchN1anl0QBd2Q2U2chJGKjVGelpANuF1ZkJjVppFSKBHZIJFcjhkS2llMWp3YDplaiNjV1RGSKVDUDdWaRdlUrp1VRdWZtlDdaZVO2NGSSBnYXlTdjlXQ5kUR5cHZyAjdkJjRwklMn9CZzIFbjlWN3FGSBlGTzEVdjNjQzFGWSNXYt50bj1WO0p1VSlXYoUGZvNWZkRjNi5CNHJVehhlWsNWaBlTStlzMkdUO3F2VFl2S6R2UUNDZzEVV40WYDplaiNjV1RGSKVDUutWOZdFezlUarVHZHdXdZhlQ3p1V1s2StJFbalmQupFWSd3YtRGbkNEa0VmV5EzYHx2caNlQzp1V08mWWJUTX5GcONlRKBlYHd3ZQNlQihVUvp0YtZlNiJTNrp1VklnYDhGcLF1bLN0VaZ3YIJEbi1WUvF2Urt0QDF0ZJNUQnF2U1knWE10dLF1bLNGSKBnYX50bj1WO0plV5Y3YTtmNDlWQnlESSlXZpVDRhhkS2J2VV9WSHlTdaNVSwN0Zv1zJIF1SDdlW2NWaCBXSyUjeLF1bnl0QBdWSYpFbjlWNsV2RVlGTDF0ZahkSwRWbWlHTuF1bJlGM0NGSKZXZHZFNkF0bKNGSKZnYYp0cLF1bnl0QBdWS==QKp0VMtojObdiWq9WahhkUwMGSNZDTtxWMiNlQwJGWCZ3YtxmMahVSwN0ZwNTYHlTekNkQQNGSSBnYHJlZZhlSuR2VxwmYupkdiNlQ6p1V4xmYy4EaiZUO3NWb5QTZYZUMahlTwMWe14mW5VzdiNjTws0QK9GZXdHcMdEesJWaotmY6RWVUBDeulFbKRVWI1kNMlXO1I2MWBDZHVVaMdkTvNWb5QnWIJFciJTN6B1VO92YTt2SJNUQnl0QBdWSIpkdlhEb6l1MKh2YtlDMJdEb1lESCN3TEF0dLF1bnl0QCNnYDJUeahlRxoFWOBzYyYVek1mV5B1UJJXYXJVehhlWsNWa1wWZtd3ZQNVQpFGSSBzYXJlZjhkS2VGSrZzQDtGcLF1bnl0QCBTYIpEck1mV5tUUvpUSHVVdZJTO0xke5knWzIEMhdVO1NWenB3QzgWNkhEb3pFVxonYzIFaiNkQ3Y2UCNkYXlTMkREM41ERBdXTDF0ZJdkU5FGWax2YtRGbkN0ZpFGSSBzYIpkdidlVmJ2MCBTYR92ZJNUQnl0QBdmWyYVek1mV5xkaBdXTt5kdiNFOvMWbWhHZXFDbiNjVwAFVFdXTDF0ZJNUQnl0RrVnYtZVeD1mW5JmMwc2YpJ0diREc3J2Q1g2YzE1ZhdFNnN2R3ZzYIpEck1mV5xUbkxGZpBDdjhkS2VGSrR3YqFjQllWMUNVVoFWYXVzaah1Z500UJt0QzIEMhdVO1NWe1gmWXxWdhdVMwVWbWZGZyUjeD1Gb0N2R5kHZpF0ZJNUQnl0QCNnYIpEbjhlVsN2MSpHTDF0ZJNUQnl0QBdWSDF0ZJNUQnlESWpnWy4kcjpXVtR2RsRnWIt2bLN1aLl0QBdGZXhGMkhUQtR2RsRnWyY1cadVNwR2VwUHZ|7|16",key))

if "__main__" == __name__:
   unlock(getpass.getpass("Key : "))
