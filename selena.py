####    How To Open This Script?    ####
###     Use unlock Function         ####
import getpass,hashlib,base64
def hasher(text,length,key):
    if length > 64:
       raise ValueError("hash length should be lower than 64")
    result = hashlib.sha256(text+key+text).hexdigest()[:length][::-1]
    return result #return final result


def separator(text,length):
    return [text[i:i+length] for i in range(0,len(text),int(length))]

def decrypt(text,key):
    textsplit = text.split("!-!")
    encrypted,shuffled,hash_length,separate_length = textsplit[0].split("|")
    encrypted = separator(encrypted,int(hash_length))
    encrypted2 = separator("".join(encrypted),int(hash_length))
    shuffled = separator(shuffled,int(separate_length))
    primary_key_is_true = True
    for i in shuffled:
        hashed = hasher(i,int(hash_length),key)
        if hashed in encrypted:
           encrypted[encrypted.index(hashed)] = i

    for i in encrypted:
        if i in encrypted2 and len(textsplit) == 1:
           raise KeyError("Wrong Key")
        elif i in encrypted2:
           primary_key_is_true = False
           break

    if primary_key_is_true:
       result = base64.b64decode("".join(encrypted)[::-1])

    if len(textsplit) >= 2 and primary_key_is_true == False:
       master_key = separator(textsplit[1],int(hash_length))
       master_key2 = separator("".join(master_key),int(hash_length))
       for i in shuffled:
           hashed = hasher(i,int(hash_length),key)
           if hashed in master_key:
              master_key[master_key.index(hashed)] = i

       for i in master_key:
           if i in master_key2:
              raise KeyError("Wrong Key")
       result = base64.b64decode("".join(master_key)[::-1])
    return result

def unlock(key):
    open("sele.py","w").write(decrypt("c687beb35174e671167e5e15f32cdd5ac6c24a256c99be54b6ae30b204e0cf7bc45149f0167a37aaa390aeb1326c71b886d9895b6f5ac993ca76f3a4fb8223cacca7a5b8c64dfad92ae357f3dc8111d3a7e179d8ec43969f2a7e501a302abc93f22ffdc0f1279e85cdb2643a2c0bddb47aa93328107cbd6dd646ff7728ff23801c8e1dcc5c0ae673acc959ec26cd9feeb1b720a60dcdc5a8b33c461b95a2b33096d1abb1618b00a6e2f4d01e9ffcd8417eb0c7633194ca6a599822a315c707da249b28aab374eb8b3b3c5a0ab1d286b4334d1274a594afe03fe0ece54dbceadfcf9f0a2410a83b5b45bf4a54bc5564bdc94d6fb9542e3224a0d3c28a44ccc6d883f98e85c4cb09785a76a89b473d382b12abff17d91c144b01b7556c9fd958515bafc9bb7eedb33c1e014077eeebc38f5b5f56a01dfc46791f666a94bb20a437f5d7350ed27d3356bf78027a0c9a6d98ea99a1fe7e8446d7dd7222ed84981859fd06f33fedffd6252f5ba772372debee1b7a06898caf2c3ed64ecacda46820bf9322edf0f1c2438c3f5675abcf92b273131a36ab457dab2b3fe0ece54dbceadfcf9f0a2410a83b5bc62e6d043daf82c9084444535aafc4eca880120b5c26f1684fccce533b4124a1694ccc10eef3df29af0058dec611a0a32ce528fe88bee9339b3da36c9fddf1e28549c9a06afb633eab068f23f6a4d3c2afa3dadf9de445848e1635f095164f6dacda560b113633470ed944f7da0947eaac32eb06d155c57a185ade63e379f4e4312d99940c0ed8d611e697be053a462c4eb5aee1342ff7a12338a039a054300fd559d7b057bf7a6c12abff177721e161c9a9e0ef834b39cc4c93121f58a97d891524c7085ee47fd8ab722a79422a8f6429aa957b07b93241068d2050ab5376619553f50f3349775481ec0a7731b2ea14d5e3ec5e470121ca26e6963ed1ea95a75a76a89b635abb207845e41b6164f2109130afa5ccdffaaf67e14d7c86ecf254318486c0d1bed143033d605f8e448e4768feccd6c59192e7aebd8684f0ab97070b900332437c2640b8f6cb386fe832a0cbbc421e41b8dac76f605bc336db65153c6d779eb94eafe02374f6316fe832a00c8474ed5b50d0bb8749d5f1d5a6ce0779c8e60395e646b7ec0675e6c8108c5bd83fd239fa3791408ea3e6ce04c681827a33c353217feb40ec76c1643000506fffeb1dba1752ed8544f568489fc0448579c8e603cb36d09d6a7f0d5401185947ce354e4f65b678c378af2d5dc630667dfcef38504dfa0a73ec0675e6d8797cba71224f85b1221c3a10ad709162416d1aa390aeb1473d382b12abff17147e56f29f99d355ebbfe5fdd2702c078cb38375ce6698e45465fca08fbc7e5d60818ac79c0f7c0e0683eb338ea3e6ce1472ec4c23ba56210804a06c92ed1af3cf343e9cf6b926b16d467b8986d649dd9b780c25e45761b71053240e9830b2499e6497ac4d5ecd81e57d0cc7ecfc67c4d8826d557b436a21e1e7e701724a397d6fe832a0367f0a2ebe286e3aafdbffe33f2aaeb904f1cd5ab4f8108bcdde9b40cfbcd3942f72d4010d365b491cf5e2e071ffdb33c9c31109c3ab8fe40005c9a36fe832a0e55132a0ac0d6c78c7dd1ba6e170b9700013457876da41ae144cc765246867718b1f3458b0ff4e1b1abd5a48fccf58ea956dfceb5a849cddb7ec292891c7e88a045004f100212e042066c24b588e11591ebec88f0804a06ce836806aa16ea0abf0e16693a99dd758c0a8b4b4204042c5a0e6ff4a233aebbb082b90779f40ac413effa12700212e04bc381f381226b3b198f74e308d9f4a93384c1e7a4891096dc33a6bc6b462a524a39731c089b01a5a79c8e60397f83d10cc263b23f3b7eabd3b2864602692c2806f605bc395eab4d7d6e4141185f2d7108a9da4a22e40ecfdf6b926b16d467b8986d649ddcf05508ae9570a95e16284b9ca3ffafc81415ff624cca4d2cdf16d3389c76c4cff79e27fcdb2643a347d4bc707d14b27724c49c3ae9d05e5cdf16d3379bae3095206ce79133c0fa326cd9fee0a2cc2f674f19041a54865680a2187ba5937c5fea1b98c6ae66f116ef7b72ca4692137ae450377121dab66f126fc0e8cfc5d1e0a652a98b1749ab646b62c5d93d3fafef24add6aa992a2a515f46d32a257ce7510b9058a0c1c80c655abaf1ddc5c81ea15facd927c607346271fc2459841528c1f74bd96e5185c68ed7fa71ea20301fa5a496f98b6cb491a80166c6bf0040be68c31df2190763ba97b0f1a1e255801173a25159d9910d20275fbcb114e425df8d144fed1bfa0ea8266395e1a1959c62618b525be81912dc17af79f393d|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|8|10",key))

if "__main__" == __name__:
   unlock("")
