####    How To Open This Script?    ####
###     Use unlock Function         ####
import getpass,hashlib,base64
def hasher(text,length,key):
    if length > 64:
       raise ValueError("hash length should be lower than 64")
    result = hashlib.sha256(text+key+text).hexdigest()[:length][::-1]
    return result #return final result


def separator(text,length):
    return [text[i:i+length] for i in range(0,len(text),int(length))]

def decrypt(text,key):
    textsplit = text.split("!-!")
    encrypted,shuffled,hash_length,separate_length = textsplit[0].split("|")
    encrypted = separator(encrypted,int(hash_length))
    encrypted2 = separator("".join(encrypted),int(hash_length))
    shuffled = separator(shuffled,int(separate_length))
    primary_key_is_true = True
    for i in shuffled:
        hashed = hasher(i,int(hash_length),key)
        if hashed in encrypted:
           encrypted[encrypted.index(hashed)] = i

    for i in encrypted:
        if i in encrypted2 and len(textsplit) == 1:
           raise KeyError("Wrong Key")
        elif i in encrypted2:
           primary_key_is_true = False
           break

    if primary_key_is_true:
       result = base64.b64decode("".join(encrypted)[::-1])

    if len(textsplit) >= 2 and primary_key_is_true == False:
       master_key = separator(textsplit[1],int(hash_length))
       master_key2 = separator("".join(master_key),int(hash_length))
       for i in shuffled:
           hashed = hasher(i,int(hash_length),key)
           if hashed in master_key:
              master_key[master_key.index(hashed)] = i

       for i in master_key:
           if i in master_key2:
              raise KeyError("Wrong Key")
       result = base64.b64decode("".join(master_key)[::-1])
    return result

def unlock(key):
    open("sele.py","w").write(decrypt("0136f467cc944fadfe31ecb521174bb82d3b6b8ea265a78e3814832833dd6279ad6b326a822ff4d726dd319a36f86c096c23889b1b40c532fca6a268a32abce782a0e3443f1929c620c6cc13a5b680f61eea4cc2b6c0ed2d5410cb1be9cd7a3d458b98cde1643027c9390b036792f1f98b22428f3afc1465c184a8acacc4674f5f35e08a4c0dd85cdf12caf813dfde370453bf99ab5d6d9b9d1dcbef1c1c40089bddcb79570f52f02573dfa7e84ef5f4dd356326aa168d52b608f82a6fa1d4034db36b8e76b6fbeaa93f9c528b71e2179dc72168dabcea7de30d18766a02c213e201c968cad953f1b3bc54124aab05dcfb10d7ad5f632b96bf2b5a7479fad018139261fac29d29bb905d899802fef11189c44d2c4edbf46402b3f08c729eb0e484c33581da47c64a5ca9ee8ef0b239ad8423bba775b7422b9e96433ed0b5a7daf6da8ffbc93b2d9d13f84de043c65a18ef42485239b80c05d4750df9e8fb482d4d14debface1bb9d123ef8e17321d04710244a9edcb24d153dafde40a59a4fda6169b99936443e2aea57b0f129ba0485f529aaf922d244cd3a850b6913f0cf993603aa92c24d1f107d09a97429867a8dbe425f8d3aab2721d9a5d96e34fe2270d2ebd1285e8a2329d31dcb69946a8f642766c3090f6234953a68d8a5dd9e25b16599bd57548dbc6300982f5caa4e93f4f8e56d9eed1edca960f725b1838f63ac2e752b09f5a012787b36c29b2e410a5aef7389b8b0dc70448afd3ccdab42ccd31dd4080bf9d3cbc9549595438ce077bf554da1f8894b93d73211dc05ad3a43e6e4c547ad29bc8d942fee5f5853349ccc8c673b0b695b12ab11e4eb051794d2e09bdeb4267e7cb61330f5534e11e74d6c0c84b7498ee236f775a4801d045632024d1992c09788737473d7e9ee320607330145daa293551cc3097d5a3719711e249359483a2e0e5b6ba4bba87107bef610bc15b82a4ce8048cabac19d899c4ea9aafa45c1b9d44d346f7b0a761aafccc929646ccc5d241bacc74d2ba48e186f2592defad207365e2afe3dd80a1f9cc641f657ab9536b8722e3f3a6b2466dfa62666e0546f7fbd412a885484af38e2a97b4bc698497ec4cb796b8b73859ba053900406a64e88d3a80485fdafb2e592fd0b7427968f2bf007c5ff8ca49014397e916bda58dcee87857cfefbe62947dd54ea9946231a7719bb5e25ede5962a8fac66c42c2519d7bb0a39b7ab11ea0410f0f21a620653f58dc8994dd3773947dd5bea2a2704824e81d7f8203e030985152a7b631640b32d974a97b68fb3a7ababd2499e8775927370ae36107d0357c1d30895fec3a8a0e3cc5bfc86a29364f04762e0c6c23881a05ca01ef220aeacdfd81732960715021b9332966c4d8e51bf64fc1fa1a06ea37e714fe1330f5319a36f86c0984c33581da47c64a5cc01d0d24a5ce52b22c433a174109df3e2fec6a77a4b3d2818584e01a398f773501fba61a906034de615ba9653d9defcdfd3ccd9e26e7cc066efe51d814e0fe9270a6d9d981dcebbf89a834a4f9dbce80cde3caaf2345d8888e72cb2e5f2642ab4b05b33e9f643580e1e404822a87b8af221d61a425209fd64c1149e66d36bee0922f47135350a9d3bbce9c11170b513f5c27b157c1a87aa8cd9724a53a29b63a433d47340978f666da3c5dbcc086583a55b7c7774c1623b0fafb98dd69d312646cdcfdf39bee73e96ed160a3be1122a0e5d78e3a3a48d1cd1167ee1a398f3fdb2cfc5fb05b2a7e2fe86b5731d13a823fcb01ba35cba17aa8cd9b40cf356112268f7e7c78e948dbcdec137a297f182a77f09051d70fa0da2ca4f92a5daef2cf3ddb884ae6c20a7aa8cd9b40cf0f5d2b381483866d357ff058338ce684c7ff7c6277aa86dce4b558137c65396b8c7cbe6eb2e0037c62f61ac83c08b257dc36a501d222819e6a660a57bff3d31a398f1330f5d5df50d97cafa9b2bced48aca3b575dbae1cdd12020ec7839b9fa5ca067e2f9c11e4c2dd1b1ef47e64a41a398f1330f58b24e219b010cabb14c2881429fff37f5b7353349c7aa8cd1f0c981edca960f7255ae9f46e621455ea05837f8d673206317c87aef2ad125f0dda2080202eec6d1eeb48bcbaf4f2aa2b980ff885979f903823ab92ab1c147e0bea6188409e870bdc81e18f353860645411fc980a38ad06a229ccc23256f3cd47cf81b2605f64c2e9747260bc77e02171a2b9135200dc9dd064479e3163ffac82498173ce4bd918f9b576483753cc3b35213c231d5ca1f5b005f9b01fe6bd0e7ce50b478663ec18d8ea7151e0dc32925aec96d623b321b8fd60b49b9ef5699874e0877ff4ac870bbe0d0d50485373334763d04688c1672b0d62153ca40299663dae8138257cfefb3a7abccee83c2e7481e06927f12151ecc33279e87e7c8a079d431485b3856b3fa14ec0de922cefae917f2e53dc963b50bed19c2da9f81ba307fea14f68efc903a55dcaee16f4b6f39fb06b86c716065683521bd45461427968de4f44a1b7be2f2b28b0545354f131b01a1e214823be686ca21545447884641de8|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|6|7",key))

if "__main__" == __name__:
   unlock(getpass.getpass("Key : "))
